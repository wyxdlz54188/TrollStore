name: Build TrollStore on Changes

on:
  push:
    paths:
      - '**.swift'
      - '**.m'
      - '**.h'
      - '**/Makefile'
      - '**/*.xcodeproj/**'
      - '**/*.xcworkspace/**'
  workflow_dispatch: # 仍然允许手动触发

jobs:
  build:
    runs-on: macos-latest
    
    steps:
      - name: Checkout repository with submodules
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Find and setup Xcode
        run: |
          # 查找可用的 Xcode 版本
          echo "可用的 Xcode 版本:"
          ls /Applications | grep -i xcode || true
          
          # 设置默认的 Xcode 路径
          if [ -d "/Applications/Xcode.app" ]; then
            sudo xcode-select -s /Applications/Xcode.app/Contents/Developer
          elif [ -d "/Applications/Xcode_15.app" ]; then
            sudo xcode-select -s /Applications/Xcode_15.app/Contents/Developer
          else
            # 尝试查找任何 Xcode 版本
            XCODE_PATH=$(find /Applications -name "Xcode*.app" -maxdepth 1 | head -1)
            if [ -n "$XCODE_PATH" ]; then
              sudo xcode-select -s "$XCODE_PATH/Contents/Developer"
            else
              echo "错误: 未找到 Xcode"
              exit 1
            fi
          fi
          
          # 接受 Xcode 许可协议
          sudo xcodebuild -license accept
          
          # 显示当前 Xcode 版本
          echo "当前 Xcode 版本:"
          xcodebuild -version

      - name: Install dependencies
        run: |
          # 安装 Homebrew (如果尚未安装)
          if ! command -v brew &> /dev/null; then
            /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
            echo 'eval "$(/opt/homebrew/bin/brew shellenv)"' >> ~/.zprofile
            eval "$(/opt/homebrew/bin/brew shellenv)"
          fi
          
          # 安装必要工具
          brew install ldid dpkg
          
          # 安装 pwnify
          if [ -d "Pwnify" ]; then
            cd Pwnify
            make
            sudo cp pwnify /usr/local/bin/
            cd ..
          fi

      - name: Build TrollStore
        run: |
          make all
          
      - name: List all build artifacts
        run: |
          echo "构建完成，_build 目录内容如下:"
          echo "=========================================="
          find ./_build -type f -o -type d | sort
          echo ""
          echo "文件详情:"
          echo "=========================================="
          find ./_build -type f -exec ls -la {} \;
          echo ""
          echo "文件大小统计:"
          echo "=========================================="
          find ./_build -type f -exec du -h {} \; | sort -hr

      - name: Upload all build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: TrollStore-Complete-Build
          path: ./_build/
          if-no-files-found: error
