name: Build TrollStore helper

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: macos-latest

    steps:
      # 1. 拉取当前仓库
      - name: Checkout
        uses: actions/checkout@v4
        with:
          path: Trollhelper

      # 2. 安装依赖
      - name: Install dependencies
        run: |
          brew update
          brew install ldid xz openssl@3 git

      # 3. 克隆 Theos 并设置环境
      - name: Setup Theos
        run: |
          export THEOS=$HOME/theos
          git clone --recursive https://github.com/theos/theos.git $THEOS
          echo "THEOS=$THEOS" >> $GITHUB_ENV
          
          # 克隆 SDK
          rm -rf $THEOS/sdks
          git clone --depth=1 https://github.com/theos/sdks.git $THEOS/sdks
          
          # 设置 Theos 环境变量
          echo "export THEOS=$THEOS" >> ~/.bash_profile
          echo "export PATH=$THEOS/bin:$PATH" >> ~/.bash_profile
          source ~/.bash_profile

      # 4. 克隆 ChOma 仓库
      - name: Clone ChOma
        run: |
          git clone https://github.com/opa334/ChOma.git $GITHUB_WORKSPACE/ChOma
          cd $GITHUB_WORKSPACE/ChOma
          make DISABLE_TESTS=1

      # 5. 指向最新 Xcode
      - name: Select Xcode
        run: sudo xcode-select -s /Applications/Xcode.app/Contents/Developer

      # 6. 设置环境变量
      - name: Setup environment
        run: |
          echo "OPENSSL_PREFIX=$(brew --prefix openssl@3)" >> $GITHUB_ENV
          echo "CHOMA_SRC=$GITHUB_WORKSPACE/ChOma/src" >> $GITHUB_ENV
          echo "CHOMA_LIB=$GITHUB_WORKSPACE/ChOma/output/lib" >> $GITHUB_ENV

      # 7. 修复和构建 fastPathSign
      - name: Build fastPathSign
        run: |
          cd $GITHUB_WORKSPACE/Trollhelper/Exploits/fastPathSign/src
          
          # 修复头文件问题
          find . -name "*.h" -exec sed -i '' 's/#include "FAT.h"/#include "Fat.h"/g' {} \;
          find . -name "*.m" -exec sed -i '' 's/#include "FAT.h"/#include "Fat.h"/g' {} \;
          find . -name "*.c" -exec sed -i '' 's/#include "FAT.h"/#include "Fat.h"/g' {} \;
          
          # 构建 fastPathSign
          cd ..
          clang -framework Foundation -framework CoreServices -framework Security \
                -fobjc-arc \
                -I${{ env.OPENSSL_PREFIX }}/include \
                -I${{ env.CHOMA_SRC }} \
                -Isrc \
                -o fastPathSign \
                src/codesign.m src/main.m src/coretrust_bug.c \
                -L${{ env.CHOMA_LIB }} -lchoma \
                -L${{ env.OPENSSL_PREFIX }}/lib -lcrypto

      # 8. 验证 Theos 环境并构建主项目
      - name: Verify and build main project
        run: |
          cd $GITHUB_WORKSPACE/Trollhelper
          
          # 验证 Theos 环境
          echo "THEOS path: $THEOS"
          if [ ! -d "$THEOS/makefiles" ]; then
            echo "❌ Theos makefiles directory missing!"
            exit 1
          fi
          
          # 检查 Makefile
          if [ ! -f "Makefile" ]; then
            echo "❌ Makefile not found!"
            exit 1
          fi
          
          # 修改压缩格式（常见问题）
          if [ -f "$THEOS/makefiles/package/deb.mk" ]; then
            sed -i '' 's/_THEOS_PLATFORM_DPKG_DEB_COMPRESSION ?= lzma/_THEOS_PLATFORM_DPKG_DEB_COMPRESSION ?= gzip/g' $THEOS/makefiles/package/deb.mk
            echo "✅ Compression format changed to gzip"
          fi
          
          # 构建项目
          make clean
          make package

      # 9. 上传产物
      - name: Upload helper
        uses: actions/upload-artifact@v4
        with:
          name: TrollStore
          path: Trollhelper/packages/*
